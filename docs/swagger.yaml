openapi: 3.0.0
info:
  title: harmonic
  version: 1.0.0

  tags:
    - name: USER
      description: User management APIs
    - name: AUTH
      description: Authentication APIs
    - name: SETTINGS
      description: Settings APIs
    - name: MAIN
      description: Common APIs

components:
  responses:
    UnauthorizedError:
      description: 인증 실패 (401)
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized
    ForbiddenError:
      description: 권한 없음 (403)
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Forbidden
    NotFoundError:
      description: 요청한 리소스를 찾을 수 없음 (404)
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Resource not found
    SessionExpired:
      description: 세션 만료 (419)
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Session expired
    TooManyRequests:
      description: 요청 제한 초과 (429)
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Too many requests, please try again later.
    BadGateway:
      description: 게이트웨이 오류 (502)
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Bad Gateway
    GatewayTimeout:
      description: 게이트웨이 타임아웃 (504)
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Gateway Timeout

paths:
  /signup:
    post:
      tags:
        - AUTH
      summary: 회원가입
      description: 회원가입을 위한 API입니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 사용자 이메일
                  example: "user@example.com"
                password:
                  type: string
                  description: 암호화 된 비밀번호
                  example: "encrypted_password"
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /social/signup:
    post:
      tags:
        - AUTH
      summary: 소셜 회원가입
      description: 소셜 회원가입을 위한 API입니다.
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /auth/signin:
    post:
      tags:
        - AUTH
      summary: 로그인 (헤더에 set-cookie, body에 access token 발급)
      description: 로그인 API입니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 사용자 이메일
                  example: "user@example.com"
                password:
                  type: string
                  description: 암호화 된 비밀번호
                  example: "encrypted_password"
      responses:
        "200":
          description: OK
          headers:
            Set-Cookie:
              description: 세션 ID가 포함된 쿠키
              schema:
                type: string
              example: SESSIONID=abc123xyz; Path=/; HttpOnly; Secure
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6...
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /user/info:
    get:
      tags:
        - USER
      summary: 유저 정보 조회
      description: 유저 정보를 조회하는 API입니다. 기본적으로 이메일만 반환합니다.
      parameters:
        - name: includeDetails
          in: query
          required: false
          schema:
            type: string
          description: 상세 정보 포함 여부
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: 사용자 이메일
                    example: "user@example.com"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
    patch:
      tags:
        - USER
      summary: 유저 정보 수정
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /auth/session:
    delete:
      tags:
        - AUTH
      summary: 로그아웃
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /settings:
    get:
      tags:
        - SETTINGS
      summary: 상세 설정 목록
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  settings:
                    type: array
                    items:
                      type: object
                      properties:
                        instrument:
                          type: array
                          items:
                            type: string
                          description: 사용악기 목록
                          example: ["piano", "guitar"]
                        genre:
                          type: array
                          items:
                            type: string
                          description: 장르 목록
                          example: ["pop", "rock"]
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
    patch:
      tags:
        - SETTINGS
      summary: 상세 설정 수정
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instrument:
                  type: array
                  items:
                    type: string
                  description: 사용악기 목록
                  example: ["piano", "guitar"]
                genre:
                  type: array
                  items:
                    type: string
                  description: 장르 목록
                  example: ["pop", "rock"]
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /list/genre:
    get:
      tags:
        - MAIN
      summary: 1 Depth 목록
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  genres:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 장르 ID
                          example: "abc123"
                        name:
                          type: string
                          description: 장르 이름
                          example: "Pop"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /list/genre/{genreId}:
    get:
      tags:
        - MAIN
      summary: 2 Depth 목록
      parameters:
        - name: genreId
          in: path
          required: true
          schema:
            type: string
          description: 장르 ID
          example: "abc123"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  subGenres:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: 하위 장르 ID
                          example: "1-1"
                        name:
                          type: string
                          description: 하위 장르 이름
                          example: "K-Pop"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /list/scale:
    get:
      tags:
        - MAIN
      summary: Scale 목록
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  scales:
                    type: array
                    items:
                      type: object
                      properties:
                        sheetid:
                          type: string
                          description: Scale ID
                          example: "abc123"
                        name:
                          type: string
                          description: Scale 이름
                          example: "C Major"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /sheet/{sheetId}:
    get:
      tags:
        - MAIN
      summary: 악보 링크 요청
      parameters:
        - name: sheetId
          in: path
          required: true
          schema:
            type: string
          description: 악보 ID
          example: "abc123"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    description: 악보 링크
                    example: "https://example.com/sheet/1"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
  /sheet/{sheetId}/play:
    get:
      tags:
        - MAIN
      summary: 악보 재생 링크
      parameters:
        - name: sheetId
          in: path
          required: true
          schema:
            type: string
          description: 악보 ID
          example: "abc123"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                    description: 음원 링크
                    example: "https://example.com/sheet/1"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "419":
          $ref: "#/components/responses/SessionExpired"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "502":
          $ref: "#/components/responses/BadGateway"
        "504":
          $ref: "#/components/responses/GatewayTimeout"
